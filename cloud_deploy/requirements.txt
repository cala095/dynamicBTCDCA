google cloud platform
************************************************
requirements os linux 12 bookworm to run the repo
sudo apt install git
sudo apt install pip
sudo apt install python3.11-venv
sudo apt-get install unzip
*************************************************
----------------python packages with the virtual env
python3 -m venv btcdca_env
source btcdca_env/bin/activate

pip install gdown
pip install pandas google-auth google-auth-oauthlib google-api-python-client beautifulsoup4 
pip install requests
pip install pandas pandas_ta numpy numba ---- (if for the indicators creation panda_ta is not working) -> pip install -U git+https://github.com/twopirllc/pandas-ta.git@development
pip install --upgrade google-cloud-storage






------------istructions:
----------token for gmail
you need to create/validate the token on your local env -> then take it on the cloud machine -> it's portable and not related to a particular machine
(expire after 6 month of no requests)
--------------------------
install all req
activate and install python packages in the virtual env
clone the repo
download the zip -> inside \dynamicBTCDCA\cloud_deploy run: gdown 1-xbfA6MHE_tUI1NVOk0oOS48ZJ3rYe46 -> (https://drive.google.com/file/d/1-xbfA6MHE_tUI1NVOk0oOS48ZJ3rYe46/view?usp=sharing take the id from the download link)
exctract it: unzip files_archive.zip -d data/
deploy the files in the repo: python3 file_deploy_config.py


---------------util
nohup python3 dataFetcher.py > /dev/null 2>error.log & echo $! > process_pid.txt            -> to launch the script without killing it at the logout with ssh, also should log errors and save pid of the background process launched
nohup python3 cloud_data_distribution.py > /dev/null 2>error.log & echo $! > process_pid.txt
ps aux | grep cala95
top                                                                                         -> list all active process
ps -p 23990                                                                                 -> monitor a specific process
kill -0 23990

-to upload a file to my cloud
curl https://rclone.org/install.sh | sudo bash (install)
rclone config (install)
rclone copy transfer.zip 'cala95 gdrive':transfer_SRS




--------------- vm-backups
pre-exc-cdf-with-gmail-crt

